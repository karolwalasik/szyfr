{"version":3,"sources":["App.js","index.js"],"names":["moveLetter","letter","key","encrypt","startCode","charCodeAt","result","Number","String","fromCharCode","caesar13","inputText","Error","arrayFromText","newArray","forEach","singleCharacter","newLetter","push","join","App","React","inputValue","setInputValue","keyInputValue","setKeyInputValue","decrypted","setDecrypted","className","onChange","e","target","value","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAGMA,EAAa,SAACC,EAAOC,GAAsB,IAAlBC,IAAiB,yDAC1CC,EAAYH,EAAOI,WAAW,GAClC,GAAc,MAAXJ,EAAgB,MAAO,IAC1B,GAAIG,GAAa,IAAMA,GAAa,IAAK,CACvC,GAAGD,EAAQ,CACT,IAAIG,GAAUF,EAAaG,OAAOL,IAAM,GAExC,OADGI,EAAO,KAAIA,GAAe,IACtBE,OAAOC,aAAaH,EAAO,IAElC,IAAIA,GAAUF,EAAYG,OAAOL,IAAM,GAKvC,OAJGI,EAAO,GAAKA,GAAe,GAE5BA,EAAQA,EAAO,GAAG,GAEbE,OAAOC,aAAaH,GAGxB,GAAIF,GAAa,IAAMA,GAAa,GAAI,CAC7C,GAAGD,EAAQ,CACT,IAAIG,GAAUF,EAAaG,OAAOL,IAAM,GAExC,OADGI,EAAO,KAAIA,GAAe,IACtBE,OAAOC,aAAaH,EAAO,IAElC,IAAIA,GAAUF,EAAYG,OAAOL,IAAM,GAKvC,OAJGI,EAAO,GAAKA,GAAe,GAE5BA,EAAQA,EAAO,GAAG,GAEbE,OAAOC,aAAaH,GAExB,OAAOL,GAGVS,EAAW,SAACC,EAAUT,GAAsB,IAAlBC,IAAiB,yDAC/C,GAAyB,kBAAdQ,IAA2BA,EACpC,MAAM,IAAIC,MAAM,gCAElB,IAAMC,EAAa,YAAOF,GACpBG,EAAW,GAKjB,OAJAD,EAAcE,SAAQ,SAAAC,GACpB,IAAIC,EAAYjB,EAAWgB,EAAgBd,EAAIC,GAC/CW,EAASI,KAAKD,MAETH,EAASK,KAAK,KAsCRC,MAnCf,WACE,MAAmCC,WAAe,IAAlD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAyCF,WAAe,IAAxD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAiCJ,WAAe,IAAhD,mBAAOK,EAAP,KAAiBC,EAAjB,KAoBA,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAOC,SArBe,SAACC,GACzBP,EAAcO,EAAEC,OAAOC,UAmBvB,MAGE,uBAAOH,SAnBkB,SAACC,GAC5BL,EAAiBK,EAAEC,OAAOC,UAmBxB,wBAAQC,QAhBU,WACjBX,GAAcE,GACfG,EAAajB,EAASY,EAAWE,GAAc,KAc/C,qBACA,wBAAQS,QAXU,WACjBX,GAAcE,GACfG,EAAajB,EAASY,EAAWE,GAAc,KAS/C,qBACCE,GAAa,4BAAIA,QC1ExBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7e5978ff.chunk.js","sourcesContent":["import './App.css';\nimport * as React from 'react'\n\nconst moveLetter = (letter,key,encrypt=true) => {\n  let startCode = letter.charCodeAt(0);\n  if(letter === ' ') return ' '\n  if (startCode >= 97 && startCode <= 122) {\n    if(encrypt){\n      let result = (startCode +  Number(key))%97\n      if(result>26) result= result%26\n      return String.fromCharCode(result+97);\n    }else{\n      let result = (startCode  -Number(key))%97\n      if(result>26) {result= result+26}\n      else{\n        result= result%26+97\n      }\n      return String.fromCharCode(result);\n    }\n\n  } else if (startCode >= 65 && startCode <= 90) {\n    if(encrypt){\n      let result = (startCode +  Number(key))%65\n      if(result>26) result= result%26\n      return String.fromCharCode(result+65);\n    }else{\n      let result = (startCode  -Number(key))%65\n      if(result>26) {result= result+26}\n      else{\n        result= result%26+65\n      }\n      return String.fromCharCode(result);\n    }\n  } else return letter;\n};\n\nconst caesar13 = (inputText,key,encrypt=true) => {\n  if (typeof inputText !== \"string\" || !inputText) {\n    throw new Error(\"not a string or empty string\");\n  }\n  const arrayFromText = [...inputText];\n  const newArray = [];\n  arrayFromText.forEach(singleCharacter => {\n    let newLetter = moveLetter(singleCharacter,key,encrypt);\n    newArray.push(newLetter);\n  });\n  return newArray.join(\"\");\n};\n\nfunction App() {\n  const [inputValue,setInputValue] = React.useState('')\n  const [keyInputValue,setKeyInputValue] = React.useState('')\n  const [decrypted,setDecrypted] = React.useState('')\n  const hanldeChangeInput = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const hanldeChangeKeyInput = (e) => {\n    setKeyInputValue(e.target.value)\n  }\n\n  const handleEncrypt = () => {\n    if(inputValue && keyInputValue){\n      setDecrypted(caesar13(inputValue,keyInputValue,true))\n    }\n  }\n\n  const handleDecrypt = () => {\n    if(inputValue && keyInputValue){\n      setDecrypted(caesar13(inputValue,keyInputValue,false))\n    }\n  }\n  return (\n    <div className=\"App\">\n      <input onChange={hanldeChangeInput}/>\n      key\n      <input onChange={hanldeChangeKeyInput}/>\n      <button onClick={handleEncrypt}>encrypt</button>\n      <button onClick={handleDecrypt}>decrypt</button>\n      {decrypted && <p>{decrypted}</p>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}